@model LMB.Models.ReportSummarySheet

@{
    ViewBag.Title = "Index";
    LMB.Models.ReportSummarySheet reportSummarySheet = new LMB.Models.ReportSummarySheet();

}
<h2>Bridge Summary Sheet</h2>
<div class="form-horizontal">
    <hr />
    @Html.HiddenFor(model => model.InspectionDaily.IdInspection)
    <h4>Component Description and Raiting</h4>
    @Html.ActionLink("Create Item", "CreateBS", new { id = (int)ViewBag.idinspect })

    <table class="table">
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.BridgeSummaryComponent.FirstOrDefault().IdRating)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.BridgeSummaryComponent.FirstOrDefault().InvH)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BridgeSummaryComponent.FirstOrDefault().InvHS)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BridgeSummaryComponent.FirstOrDefault().OpH)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.BridgeSummaryComponent.FirstOrDefault().OpHS)

            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.BridgeSummaryComponent)
        {
        <tr>
            <td>
                @Html.HiddenFor(modelItem => item.IdInspection)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdRating)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InvH)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InvHS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OpH)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OpHS)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditF", new { id = item.IdBScomponent })
                @Html.ActionLink("Delete", "DeleteF", new { id = item.IdBScomponent })
            </td>
        </tr>
        }

    </table>

    <h4>Comments and/or Upgrade Recommendations</h4>
    @Html.ActionLink("Create Comment", "CreateBS", new { id = (int)ViewBag.idinspect })


    <table class="table">
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.BridgeSummaryComments.FirstOrDefault().Comment)

            </th>

            <th></th>
        </tr>

        @foreach (var item in Model.BridgeSummaryComments)
        {
            <tr>
                <td>
                    @Html.HiddenFor(modelItem => item.IdInspection)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)

                </td>

                <td>
                    @Html.ActionLink("Edit", "EditF", new { id = item.IdBSComment })
                    @Html.ActionLink("Delete", "DeleteF", new { id = item.IdBSComment })
                </td>
            </tr>
        }

    </table>
    <h4>Load Posting Limits for Present Condition</h4>
            <div class="form-group">
                
                <table>
                    <tr>
                        <td><h4><u>Inventory</u></h4></td>
                        <td><h4><u></u></h4></td>
                        <td><h4><u></u></h4></td>
                        <td><h4><u>Operating</u></h4></td>
                    </tr>
                    <tr>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.InvGross, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.InvGross, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                             @Html.LabelFor(model => model.BridgeSummaryData.InvGross, "lbs Gross", htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>


                        <td width=52>
                            <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><o:p>&nbsp;</o:p></p>
                        </td>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.OpGross, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.OpGross, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.OpGross, "lbs Gross", htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>

                    </tr>
                    <tr>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.InvAxle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.InvAxle, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.InvAxle, "lbs TandemAxle", htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>


                        <td width=52>
                            <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><o:p>&nbsp;</o:p></p>
                        </td>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.OpAxle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.OpAxle, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.OpAxle, "lbs TandemAxle", htmlAttributes: new { @class = "control-label col-md-2" })
                            
                        </td>

                    </tr>


                    <tr>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.InvTandem, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.InvTandem, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.InvTandem, "lbs Axle or Tandem", htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>


                        <td width=52>
                            <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><o:p>&nbsp;</o:p></p>
                        </td>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.OpTandem, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.OpTandem, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.OpAxle, "lbs Axle or Tandem", htmlAttributes: new { @class = "control-label col-md-2" })
                            
                        </td>

                    </tr>

                    <tr>
                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.InvSign, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.InvSign, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.InvSign, "Sign Code", htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>


                        <td width=52>
                            <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:normal'><o:p>&nbsp;</o:p></p>
                        </td>

                        <td width=200>
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.BridgeSummaryData.OpSign, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BridgeSummaryData.OpSign, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width=150>
                            @Html.LabelFor(model => model.BridgeSummaryData.OpSign, "Sign Code", htmlAttributes: new { @class = "control-label col-md-2" })

                        </td>
                    </tr>
                </table>





            </div>

  

            <input type="submit" style="margin-left:325pt; margin-top:10pt" value="Save" id="add" class="btn btn-primary">
            <div id="mens"></div>
            <hr />
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

    $(document).ready(function () {
        $("#add").click(function () {
            var description = $("#InspectionDescription").val();
            var owner = $("#InspectionOwner").val();
            var idinsp = $("#IdInspection").val();
            if (description != "" || owner != "") {
                var Url = '@Url.Action("Save", "Done")';
                $.post(Url, { "id": idinsp, "InspectionDescription": description, "InspectionOwner": owner })
               .done(function (data) {
                   swal('Info', 'Success', 'success');
               })
               .fail(function (xhr, status, error) {
                   swal('Error', xhr.responseText, 'error');
               });
            }
        });
    });

    </script>
}