@model IEnumerable<LMB.Models.InspectionDaily>

@{
    ViewBag.Title = "Index";
}

<style>
     #map {
        height: 400px;
        width: 100%;
       }
    #buttons{
        display:block;
        float:right;
    }
    table.dataTable thead tr {
        background-color: #73ADF5;
    }

    .grey {
        background-color: #FAFAFA;
    }

    .lila {
        background-color: #efdddd;
    }

    .green {
        background-color: #def1d7;
    }
</style>
<div id="buttons">
    @Html.ActionLink(" ", "Create", new { }, new { @class = "btn btn-success btn-lg glyphicon glyphicon-plus", @title = "Create" })
    <a id="alumno" data-target="#modalUser" data-toggle="modal" data-id="" onclick="getSelected()" href="#" class="unlock" title="Assign user"><span class='btn btn-warning btn-lg glyphicon glyphicon-edit'></span></a>
    <a id="deleteIns" data-target="#modalDelete" data-toggle="modal" data-id="" onclick="getSelectedDel()" href="#" class="unlock" title="Assign user"><span class='btn btn-danger btn-lg glyphicon glyphicon-remove'></span></a>
</div>
<table class="table" id="rawdata_table">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.NumInspection)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DO)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Control)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Section)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scope)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hour)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InspectionState.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LongitudeIni)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LatitudeIni)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="checkbox" name="id" value="@item.IdInspection" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumInspection)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Control)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Section)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Scope)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hour)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InspectionState.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LongitudeIni)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LatitudeIni)
                </td>
            </tr>
        }
    </tbody>
</table>
             

<div id="map"></div>
<script>
      var map;
      function initMap() {
          var latlng = new google.maps.LatLng(30.161615, -98.255301);
        map = new google.maps.Map(document.getElementById('map'), {
            center: latlng,
          zoom: 8
        });
        var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            title: 'ROCKY CREEK'
        });
      }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwT17mYT6U4lLdhLb7sFQjq2smSkUQuEQ&callback=initMap"
        async defer></script>

<!-- Modal -->
<div id="modalUser" data-backdrop = "false" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Assign User</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" name="bookId" id="bookId" value="" />
                <input type="hidden" name="userId" id="userId" value="" />


                <div class="form-group">
                    <label for="sel1">User</label>
                    @Html.DropDownList("Userdb", null, "[Select a User]", htmlAttributes: new { @class = "form-control", @onchange = "getval(this);" })
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="save">Save</button>
                <button id="closemodal" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div id="modalDelete" data-backdrop="false" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Assign User</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" name="inspId" id="inspId" value="" />
                <input type="hidden" name="userId" id="userId" value="" />


                <div class="form-group">
                    <label for="sel1">User</label>
                    @Html.DropDownList("Userdb", null, "[Select a User]", htmlAttributes: new { @class = "form-control", @onchange = "getval(this);" })
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" name="btnDelete" id="btnDelete">Delete</button>
                <button id="closemodal" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

@Html.Raw(TempData["msg"])
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/jq-3.2.1/dt-1.10.16/datatables.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        var message = '';
        var table = "";
        var sel = [];
        var list;
        $(document).ready(function (e) {
            inicializar(e);
        }
    );
        function tabla() {
            table = $("#rawdata_table").DataTable({
                scrollY: '50vh',
                scrollCollapse: true,
                "createdRow": function (row, data, dataIndex) {
                    if (data[11] == "Other") {
                        $(row).addClass('grey');
                    } else if (data[11] == "Unsigned") {
                        $(row).addClass('lila');
                    } else if (data[11] == "Assigned") {
                        $(row).addClass('green');
                    }

                }

            });
        }
        function modal(e) {
            //$('#modalUser').on('show.bs.modal', function (e) {
            //    var id = $(e.relatedTarget).data().id;
            //    $(e.currentTarget).find('#bookId').val(id);
            //});
        }

        function lock() {
            $(".linkdisabled").click(function () {
                return false;
            });

        }

        function inicializar(e) {
            tabla();
            modal(e);
            lock();
        }
        @Html.Raw(ViewBag.Select);
    </script>
    <script>
        var Url = '@Url.Action("Save", "InspectionDailies")';
        var Urld = '@Url.Action("Delete", "InspectionDailies")';
        var user = 0;
        function getval(sel) {
            user = sel.value;
        }

        $("#save").on("click", function () {

            var idinsp = $('#bookId').val();
            if (user == 0) {
                swal('¡Alert!', 'Select a User!.', 'error');
                return;
            }


            $.post(Url, { "listaIds": list, "user": user })
            .done(function (data) {
                swal('Info', 'Success', 'success');
                $("#modalUser").trigger('click');
                location.reload();
            })
            .fail(function (xhr, status, error) {
                swal('Error', xhr.responseText, 'error');
            });

        });

        $("#btnDelete").on("click", function () {

            var idinsp = $('#inspId').val();
            if (user == 0) {
                swal('¡Alert!', 'Select a User!.', 'error');
                return;
            }


            $.post(Urld, { "listaIds": list, "user": user })
            .done(function (data) {
                swal('Info', 'Success', 'success');
                $("#modalDelete").trigger('click');
                location.reload();
            })
            .fail(function (xhr, status, error) {
                swal('Error', xhr.responseText, 'error');
            });

        });

        function getSelected() {
            $('input[type=checkbox]:checked').each(function (i) {
                sel[i] = $(this).val();
            })
            list = sel.join();
            $("#bookId").val(sel);
        }

        function getSelectedDel() {
            $('input[type=checkbox]:checked').each(function (j) {
                sel[j] = $(this).val();
            })
            list = sel.join();
            $("#inspId").val(sel);
        }

    </script>
<script>
function myMap() {
var mapProp= {
    center: new google.maps.LatLng(98.215124, -30.115936),
    zoom:5,
};
var map=new google.maps.Map(document.getElementById("googleMap"),mapProp);
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDtXkyMiqOFCmYS1MwDzynfAvf-jA9Xr-E&callback=myMap"></script>

}